# Generated by Django 3.1.3 on 2020-11-03 14:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re
import shop.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64)),
                ('slug', models.SlugField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='A unique identifier for this product. Lettrs, digits, dashes allowed', max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex=re.compile('^[A-Za-z0-9\\-]+$'))])),
                ('title', models.CharField(help_text='A brief description of this product', max_length=256)),
                ('slug', models.SlugField(help_text='Unique string that identifies this product in URLs', max_length=128, unique=True)),
                ('detail', models.TextField(blank=True, default='', help_text='An optional detailed description of this product')),
                ('image', models.ImageField(blank=True, help_text='An optional image of this product', upload_to='products/%Y%m')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('available', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.category')),
            ],
            options={
                'ordering': ('code',),
            },
            bases=(models.Model, shop.models.TimestampMixin),
        ),
    ]
